name: Playwright Tests
on:
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write
  
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          docker build -t $DOCKER_IMAGE_NAME .
          
      - name: Publish to AWS ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        run: |
          docker tag python-tests:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/regression-tests:latest
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/regression-tests:latest

      - name: Create tests-results directory
        run: mkdir -p tests-results
      
      - name: Run tests
        run: |
          docker run --rm -v $(pwd)/tests-results:/app/tests-results python-tests pytest -m regression --junitxml=tests-results/junit-test-results.xml
      
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-traces
          path: tests-results/
          
      - name: Publish Python Playwright Tests Results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          check_name: ðŸ§ª Python Playwright Test Results
          files: |
            tests-results/junit-test-results.xml
